name: Deploy Order System App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout do código
    - name: Checkout code
      uses: actions/checkout@v2

    # Configurar o Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'

    # Instalar dependências
    - name: Install dependencies
      run: npm install
      working-directory: ./order-system-app

    # Build do aplicativo Node.js
    - name: Build order system app
      run: npm run build
      working-directory: ./order-system-app

    # Verificar se os arquivos YAML estão no local correto
    - name: List files in kubernetes-infra/k8s
      run: ls -la ./kubernetes-infra/k8s

    # Configurar as credenciais AWS com secrets para acesso ao EKS
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    # Instalar kubectl para interação com o cluster Kubernetes (EKS)
    - name: Setup kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.22.0'  # Ajuste a versão do kubectl de acordo com seu cluster

    # Obter o contexto do cluster EKS
    - name: Update kubeconfig
      run: aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name my-eks-cluster

    # Aplicar o deployment e service do app no Kubernetes
    - name: Deploy app to Kubernetes
      run: |
        kubectl apply -f ./kubernetes-infra/k8s/appnode-deployment.yaml
        kubectl apply -f ./kubernetes-infra/k8s/appnode-service.yaml

    # Verificar o status do deployment
    - name: Verify Deployment
      run: kubectl rollout status deployment/order-system-app